#!/usr/bin/env bash

_yarn_completion() {
  local curr prev opts subcommands subsub

  COMPREPLY=()
  curr="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  subcommands="access add bin cache check clean config generate-lock-entry global info init install licenses link login logout ls outdated owner pack publish remove run self-update tag team unlink upgrade upgrade-interactive version versions why"
  opts="-h --help -V --version --verbose --offline --prefer-offline --strict-semver --json --ignore-scripts --har --ignore-platform --ignore-engines --ignore-optional --force --no-bin-links --flat --prod --production --no-lockfile --pure-lockfile --global-folder --modules-folder --cache-folder --mutex --no-emoji --proxy --https-proxy --no-progress"

  # Options
  if [[ "$curr" == -* ]]; then
    case "${COMP_WORDS[1]}" in
      add)
        opts="$opts -D --dev -P --peer -O --optional -E --exact -T --tilde"
        ;;
      check)
        opts="$opts --integrity"
        ;;
      global)
        opts="$opts --prefix"
        ;;
      init)
        opts="$opts -y --yes"
        ;;
      licenses)
        opts="$opts --production"
        ;;
      ls)
        opts="$opts --depth"
        ;;
      pack)
        opts="$opts -f --filename"
        ;;
      publish)
        opts="$opts --new-version --message --no-git-tag-version --access --tag"
        ;;
      upgrade)
        opts="$opts --ignore-engines"
        ;;
      version)
        opts="$opts --new-version --message --no-git-tag-version"
        ;;
    esac

    COMPREPLY=($(compgen -W "$opts" -- "$curr"))
    return 0
  fi

  if [[ $COMP_CWORD == 1 ]]; then
    # Subcommand expected
    COMPREPLY=($(compgen -W "$subcommands" -- "$curr"))
    return 0
  elif [[ $COMP_CWORD == 2 ]]; then
    # Arguments to subcommand
    case "${COMP_WORDS[1]}" in
      access)
        subsub="public restricted grant revoke ls-packages ls-collaborators edit"
        ;;
      cache)
        subsub="ls dir clean"
        ;;
      config)
        subsub="set get delete list"
        ;;
      global)
        subsub="add bin ls remove upgrade"
        ;;
      licenses)
        subsub="ls generate-disclaimer"
        ;;
      owner)
        subsub="add rm ls"
        ;;
      tag)
        subsub="add rm ls"
        ;;
      team)
        subsub="create destroy add rm ls"
        ;;
    esac

    COMPREPLY=($(compgen -W "$subsub" -- "$curr"))
    return 0
  fi
}

complete -o default -F _yarn_completion yarn
